## The 'default' location.
location / {

    location ^~ /system/files/ {
       try_files $uri @drupal;
    }

    ## Trying to access private files directly returns a 404.
    location ^~ /sites/default/files/private/ {
        internal;
    }



    ## If accessing an image generated by Drupal 6 imagecache, serve it
    ## directly if available, if not relay the request to Drupal to (re)generate
    ## the image.
    location ~* /imagecache/ {
        ## Image hotlinking protection. If you want hotlinking
        ## protection for your images uncomment the following line.
        #include apps/drupal/hotlinking_protection.conf;

        access_log off;
        expires 30d;
        try_files $uri @drupal;
    }

    ## Drupal 7 generated image handling, i.e., imagecache in core. See:
    ## http://drupal.org/node/371374.
    location ~* /files/styles/ {
        ## Image hotlinking protection. If you want hotlinking
        ## protection for your images uncomment the following line.
        #include apps/drupal/hotlinking_protection.conf;

        access_log off;
        expires 30d;
        try_files $uri @drupal;
    }

    ## Advanced Aggregation module CSS
    ## support. http://drupal.org/project/advagg.
    location ^~ /sites/default/files/advagg_css/ {
        expires max;
        add_header ETag '';
        add_header Last-Modified 'Wed, 20 Jan 1988 04:20:42 GMT';
        add_header Accept-Ranges '';

        location ~* /sites/default/files/advagg_css/css[_[:alnum:]]+\.css$ {
            access_log off;
            try_files $uri @drupal;
        }
    }

    ## Advanced Aggregation module JS
    ## support. http://drupal.org/project/advagg.
    location ^~ /sites/default/files/advagg_js/ {
        expires max;
        add_header ETag '';
        add_header Last-Modified 'Wed, 20 Jan 1988 04:20:42 GMT';
        add_header Accept-Ranges '';

        location ~* /sites/default/files/advagg_js/js[_[:alnum:]]+\.js$ {
            access_log off;
            try_files $uri @drupal;
        }
    }

    ## All static files will be served directly.
    location ~* ^.+\.(?:css|cur|js|jpe?g|gif|htc|ico|png|html|xml|otf|ttf|eot|woff|svg)$ {
        access_log off;
        expires 30d;
        ## No need to bleed constant updates. Send the all shebang in one
        ## fell swoop.
        tcp_nodelay off;
        ## Set the OS file cache.
        open_file_cache max=3000 inactive=120s;
        open_file_cache_valid 45s;
        open_file_cache_min_uses 2;
        open_file_cache_errors off;
    }

    ## PDFs and powerpoint files handling.
    location ~* ^.+\.(?:pdf|pptx?)$ {
        expires 30d;
        ## No need to bleed constant updates. Send the all shebang in one
        ## fell swoop.
        tcp_nodelay off;
    }

    ## Replicate the Apache <FilesMatch> directive of Drupal standard
    ## .htaccess. Disable access to any code files. Return a 404 to curtail
    ## information disclosure. Hide also the text files.
    location ~* ^(?:.+\.(?:htaccess|make|txt|engine|inc|info|install|module|profile|po|pot|sh|.*sql|test|theme|tpl(?:\.php)?|xtmpl)|code-style\.pl|/Entries.*|/Repository|/Root|/Tag|/Template)$ {
        return 404;
    }

    ## First we try the URI and relay to the /index.php?q=$uri&$args if not found.
    try_files $uri @drupal;
}

########### Security measures ##########

## Run the update from the web interface with Drupal 7.
location = /authorize.php {
    fastcgi_pass phpcgi;
}

location = /status.php {
    fastcgi_pass phpcgi;
}

location = /update.php {
    #auth_basic "Restricted Access"; # auth realm
    #auth_basic_user_file .htpasswd-users; # htpasswd file
    fastcgi_pass phpcgi;
}

location = /install.php {
	fastcgi_pass phpcgi;
}

## Restrict access to the strictly necessary PHP files. Reducing the
## scope for exploits. Handling of PHP code and the Drupal event loop.
location @drupal {
    ## Include the FastCGI config.
    include fastcgi_drupal.conf;
    fastcgi_pass phpcgi;

    ## FastCGI microcache.
    include microcache_fcgi.conf;
    ## FCGI microcache for authenticated users also.
    ## Incluir el microcache para usuarios authenticados sin distinción de rutas
    ## tiene efectos no esperados
    # include microcache_fcgi_auth.conf;

    ## Filefield Upload progress
    ## http://drupal.org/project/filefield_nginx_progress support
    ## through the NginxUploadProgress modules.
    track_uploads uploads 60s;
}

location @drupal-no-args {
    ## Include the specific FastCGI configuration. This is for a
    ## FCGI backend like php-cgi or php-fpm.
    include fastcgi_no_args_drupal.conf;
    fastcgi_pass phpcgi;

    ## FCGI microcache for authenticated users also.
    include microcache_fcgi_auth.conf;
}

## Disallow access to .bzr, .git, .hg, .svn, .cvs directories: return
## 404 as not to disclose information.
location ^~ /.bzr {
    return 404;
}

location ^~ /.git {
    return 404;
}

location ^~ /.hg {
    return 404;
}

location ^~ /.svn {
    return 404;
}

location ^~ /.cvs {
    return 404;
}

## Disallow access to patches directory.
location ^~ /patches {
    return 404;
}

## Disallow access to drush backup directory.
location ^~ /backup {
    return 404;
}

## Disable access logs for robots.txt.
location = /robots.txt {
    access_log off;
    ## Add support for the robotstxt module
    ## http://drupal.org/project/robotstxt.
    try_files $uri @drupal-no-args;
}

## RSS feed support.
location = /rss.xml {
    try_files $uri @drupal-no-args;
}

## XML Sitemap support.
location = /sitemap.xml {
    try_files $uri @drupal-no-args;
}

## Support for favicon. Return an 1x1 transparent GIF if it doesn't
## exist.
location = /favicon.ico {
    expires 30d;
    try_files /favicon.ico @empty;
}

## Return an in memory 1x1 transparent GIF.
location @empty {
    expires 30d;
    empty_gif;
}

## Any other attempt to access PHP files returns a 404.
location ~* ^.+\.php$ {
    return 404;
}